//{ Driver Code Starts
// driver

#include <bits/stdc++.h>
using namespace std;

/* Linked list Node */
struct Node {
    int data;
    struct Node* next;
    Node(int x) {
        data = x;
        next = NULL;
    }
};

struct Node* buildList(int size)
{
    int val;
    cin>> val;
    
    Node* head = new Node(val);
    Node* tail = head;
    
    for(int i=0; i<size-1; i++)
    {
        cin>> val;
        tail->next = new Node(val);
        tail = tail->next;
    }
    
    return head;
}

void printList(Node* n)
{
    while(n)
    {
        cout<< n->data << " ";
        n = n->next;
    }
    cout<< endl;
}


// } Driver Code Ends
/* node for linked list:

struct Node {
    int data;
    struct Node* next;
    Node(int x) {
        data = x;
        next = NULL;
    }
};

*/

class Solution
{
    public:
    void carryadd(struct Node* &head , struct Node* &tail, int carry){
        struct Node* carrynode = new struct Node(carry);
        if(head == NULL){
            head  = carrynode;
            tail =  carrynode;
            return ;
        }
        else{
                    tail -> next = carrynode;
        tail = carrynode;
            
        }
       

    }
    struct Node* reverse(struct Node* fi ){
        
        struct Node* temp = fi;
        struct Node* prev = NULL;
        struct Node* next = NULL;
        while(temp != NULL){
            next = temp->next;
            temp -> next = prev;
            prev = temp;
            temp = next;
        }
        return prev;
    }
    struct Node* sum (struct Node* first,struct Node* second){
        struct Node* head = NULL;
        struct Node* tail = NULL;
       int carry = 0;
       while(first != NULL || second !=NULL || carry != 0){
           int val1 = 0;
           if(first!=NULL){
               val1 = first ->data;
           }
           int val2 = 0;
           if(second!=NULL){
               val2 = second->data;
           }
           int sum = val1 + val2 + carry;
           int digit = sum%10;
           carry = sum/10;
           carryadd(head,tail,digit);
           if(first !=NULL){
               first = first ->next;
           }
           if(second !=NULL){
               second = second -> next;
           }
       }
           return head;
       }
       
    //Function to add two numbers represented by linked list.
    struct Node* addTwoLists(struct Node* first, struct Node* second)
    {   if(first != NULL && first->next != NULL){
          first = reverse(first);
      }
       
        if(second != NULL && second ->next !=NULL){
             second = reverse(second);
        }
       
        struct Node* sumnode = sum(first,second);
        return reverse(sumnode);
        
    }
};


//{ Driver Code Starts.

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n, m;
        
        cin>>n;
        Node* first = buildList(n);
        
        cin>>m;
        Node* second = buildList(m);
        Solution ob;
        Node* res = ob.addTwoLists(first,second);
        printList(res);
    }
    return 0;
}

// } Driver Code Ends
